{
    "log_file_path": "",
    "discord_webhook_url": "{?discord_webhook_url}",
    "google_sheets_webhook": "{?google_sheets_webhook}",
    "google_sheets_mapping": ["player_death"],
    "datasource": "googlesheets",
    "supabase_key": "",
    "realtime": ["actor_stall", "player_death", "vehicle_destruction","vip","actor_profile"],
    "scraping": ["actor_death"],
    "active_users_update_interval": 120,
    "auto_reconnection": true,
    "tabs": {
        "Weapons Analysis": "SELECT weapon, COUNT(*) as kills, COUNT(DISTINCT killer) as unique_killers FROM sc_default WHERE damage_type != 'Crash' GROUP BY weapon ORDER BY kills DESC",
        "Killer Stats": "SELECT killer, COUNT(*) as kills FROM sc_default WHERE killer != victim GROUP BY killer ORDER BY kills DESC",
        "Damage Types": "SELECT damage_type, COUNT(*) as occurrences FROM sc_default GROUP BY damage_type ORDER BY occurrences DESC",
        "User Weapons": "SELECT username, weapon, COUNT(*) as kills FROM sc_default WHERE killer = username GROUP BY username, weapon ORDER BY username, kills DESC",
        "User Zones": "SELECT username, zone, COUNT(*) as visits FROM sc_default GROUP BY username, zone ORDER BY username, visits DESC"
    },
    "regex_patterns": {
        "player_death" : "<(?P<timestamp>.*?)> \\[Notice\\] <Actor Death> CActor::Kill: '(?P<victim>(?!(Kopion_|PU_|NPC_|vlk_|ARGO_|AIModule_|Shipjacker_)).*?)' \\[(?P<victim_id>\\d+)\\] in zone '(?P<zone>.*?)' killed by '(?P<killer>(?!(Kopion_|PU_|NPC_|vlk_|ARGO_|AIModule_|Shipjacker_|PlanetKillVolume)).*?)' \\[(?P<killer_id>\\d+)\\] using '(?P<weapon>.*?)' \\[Class (?P<weapon_class>.*?)\\] with damage type '(?P<damage_type>(?!(Crash|Suicide|SelfDestruct|Hazard|Normal)).*?)' from direction x: (?P<direction_x>[\\d\\.-]+), y: (?P<direction_y>[\\d\\.-]+), z: (?P<direction_z>[\\d\\.-]+) \\[Team_ActorTech\\]\\[Actor\\]",
        "actor_death": "<(?P<timestamp>.*?)> \\[Notice\\] <Actor Death> CActor::Kill: '(?P<victim>.*?)' \\[(?P<victim_id>\\d+)\\] in zone '(?P<zone>.*?)' killed by '(?P<killer>.*?)' \\[(?P<killer_id>\\d+)\\] using '(?P<weapon>.*?)' \\[Class (?P<weapon_class>.*?)\\] with damage type '(?P<damage_type>.*?)' from direction x: (?P<direction_x>[\\d\\.-]+), y: (?P<direction_y>[\\d\\.-]+), z: (?P<direction_z>[\\d\\.-]+) \\[Team_ActorTech\\]\\[Actor\\]",
        "leave_player": "<(?P<timestamp>.*?)> \\[Notice\\] <CEntityComponentInstancedInterior::OnEntityLeaveZone> \\[InstancedInterior\\] OnEntityLeaveZone - InstancedInterior \\[(?P<zone>.*?)\\] \\[(?P<zone_id>\\d+)\\] -> Entity \\[(?P<entity>.*?)\\] \\[(?P<entity_id>\\d+)\\] -- m_openDoors\\[(?P<open_doors>\\d+)\\], m_managerGEID\\[(?P<manager_geid>\\d+)\\], m_ownerGEID\\[(?P<player>.*?)\\]\\[(?P=entity_id)\\], m_isPersistent\\[(?P<persistent>\\d+)\\] \\[Team_(?P<team>.*?)\\]\\[Cargo\\]",
        "actor_stall": "<(?P<timestamp>.*?)> \\[Notice\\] <Actor stall> Actor stall detected, Player: (?P<player>.*?), Type: .*?, Length: .*?\\. \\[Team_(?P<team>.*?)\\]\\[Actor\\]",
        "enter_player": "<(?P<timestamp>.*?)> \\[Notice\\] <CEntityComponentInstancedInterior::OnEntityEnterZone> \\[InstancedInterior\\] OnEntityEnterZone - InstancedInterior \\[(?P<zone>.*?)\\] \\[(?P<zone_id>\\d+)\\] -> Entity \\[(?P<entity>.*?)\\] \\[(?P<entity_id>\\d+)\\] -- m_openDoors\\[(?P<open_doors>\\d+)\\], m_managerGEID\\[(?P<manager_geid>\\d+)\\], m_ownerGEID\\[(?P<player>.*?)\\]\\[(?P=entity_id)\\], m_isPersistent\\[(?P<persistent>\\d+)\\] \\[Team_(?P<team>.*?)\\]\\[Cargo\\]",
        "enter_ship": "<(?P<timestamp>.*?)> \\[Notice\\] <CEntityComponentInstancedInterior::OnEntityEnterZone> \\[InstancedInterior\\] OnEntityEnterZone - InstancedInterior \\[(?P<zone>.*?)\\] \\[(?P<zone_id>\\d+)\\] -> Entity \\[(?P<entity>(ORIG|CRUS|RSI|AEGS|VNCL|DRAK|ANVL|BANU|MISC|CNOU|XIAN|GAMA|TMBL|ESPR|KRIG|GRIN|XNAA)_.*?)\\] \\[(?P<entity_id>\\d+)\\] -- m_openDoors\\[(?P<open_doors>\\d+)\\], m_managerGEID\\[(?P<manager_geid>\\d+)\\], m_ownerGEID\\[(?P<player>.*?)\\]\\[(?P<player_id>.*?)\\], m_isPersistent\\[(?P<persistent>\\d+)\\] \\[Team_(?P<team>.*?)\\]\\[Cargo\\]",
        "leave_ship": "<(?P<timestamp>.*?)> \\[Notice\\] <CEntityComponentInstancedInterior::OnEntityLeaveZone> \\[InstancedInterior\\] OnEntityLeaveZone - InstancedInterior \\[(?P<zone>.*?)\\] \\[(?P<zone_id>\\d+)\\] -> Entity \\[(?P<entity>(ORIG|CRUS|RSI|AEGS|VNCL|DRAK|ANVL|BANU|MISC|CNOU|XIAN|GAMA|TMBL|ESPR|KRIG|GRIN|XNAA)_.*?)\\] \\[(?P<entity_id>\\d+)\\] -- m_openDoors\\[(?P<open_doors>\\d+)\\], m_managerGEID\\[(?P<manager_geid>\\d+)\\], m_ownerGEID\\[(?P<player>.*?)\\]\\[(?P<player_id>.*?)\\], m_isPersistent\\[(?P<persistent>\\d+)\\] \\[Team_(?P<team>.*?)\\]\\[Cargo\\]",
        "connected" : "<(?P<timestamp>[^>]+)> \\[CSessionManager::OnClientConnected\\] (?P<message>Connected!)",
        "quantum_jump" : "<(?P<timestamp>[^>]+)> -- Entity Trying To QT: (?P<player>.+)",
        "vehicle_destruction": "<(?P<timestamp>.*?)> \\[Notice\\] <Vehicle Destruction> CVehicle::OnAdvanceDestroyLevel: Vehicle '(?P<vehicle>.*?)' \\[(?P<vehicle_id>\\d+)\\] in zone '(?P<zone>.*?)' \\[pos x: (?P<pos_x>[\\d\\.-]+), y: (?P<pos_y>[\\d\\.-]+), z: (?P<pos_z>[\\d\\.-]+) vel x: (?P<vel_x>[\\d\\.-]+), y: (?P<vel_y>[\\d\\.-]+), z: (?P<vel_z>[\\d\\.-]+)] driven by '(?P<driver>.*?)' \\[(?P<driver_id>\\d+)\\] advanced from destroy level (?P<destroy_level_from>\\d+) to (?P<destroy_level_to>\\d+) caused by '(?P<cause>.*?)' \\[(?P<cause_id>\\d+)\\] with '(?P<damage_type>.*?)' \\[Team_(?P<team>.*?)\\]\\[Vehicle\\]",
        "connection_flow": "<(?P<timestamp>.*?)> \\[Notice\\] <Connection Flow> CSCCommsComponent::DoEstablishCommunicationCommon: Update bubble created for communication connection '(?P<connection_id>\\d+)' on channel '(?P<channel>\\d+)' for (?P<entity>.*?) \\[(?P<entity_id>\\d+)\\] to track their communication partner (?P<partner>(?!(ATC_|AImodule_|Unavailable)).*?) \\[(?P<partner_id>\\d+)\\] \\[Team_(?P<team>.*?)\\]\\[Comms\\]"
    },
    "important_players": "",
    "messages": {
        "vehicle_destruction": "{vehicle}:{driver} was destroyed {destroy_level_to} by {cause} with {damage_type} in {zone}",
        "actor_death": "******* {killer}->{victim}: {zone} - {weapon} - {damage_type}",
        "player_death": "+++++++ {killer}->{victim}: {zone} - {weapon} - {damage_type}",
        "actor_stall": "{player}: Stalled",
        "leave_player": "{player}: Left zone {zone}",
        "enter_player": "{player}: Entered zone {zone}",
        "enter_ship": "{player}: Ship {entity} entered zone {zone}",
        "leave_ship": "{player}: Ship {entity} left zone {zone}",
        "connected": "====================== Connected ======================",
        "quantum_jump": "{player}: Quantum jump",
        "mode_change": "Game Mode changed: {mode} {status} at {timestamp}",
        "connection_flow" : "{partner}: in range",
        "vip": "VIP detected: {vip}",
        "actor_profile": "{player_name}: {org} {enlisted} {action} {username}"
    },
    "discord": {
        "player_death": "{username} :skull: **{killer} -> {victim}** *{mode}* with {weapon} in {zone} with {damage_type}",
        "startup": "ðŸš€ *Startup Alert* **{username}** {script_version}",
        "vip": "VIP detected: {vip}",
        "actor_profile": "{player_name}: {org} {enlisted} {action} {username}"
    },
    "console_key": "",
    "colors": {
        "pink": ["player_death","vip,"actor_profile"],        
        "yellow": ["actor_death","vehicle_destruction"],
        "green": ["actor_stall"],
        "blue,white" : ["connected"],
        "orange" : ["mode_change"]
    }
}
