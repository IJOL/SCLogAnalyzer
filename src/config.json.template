{
    "log_file_path": "",
    "username": "{?username}",
    "discord_webhook_url": "{?discord_webhook_url}",
    "google_sheets_webhook": "{?google_sheets_webhook}",
    "google_sheets_mapping": {
        "username_death": "Player deaths"
    },
    "filter_username_pattern": "username_death",
    "regex_patterns": {
        "player": "Player (?P<player>\\w+)",
        "timestamp": "\\[(?P<timestamp>.*?)\\]",
        "zone": "Zone (?P<zone>\\w+): (?P<action>\\w+)",
        "actor_death": "<(?P<timestamp>.*?)> \\[Notice\\] <Actor Death> CActor::Kill: '(?P<victim>.*?)' \\[(?P<victim_id>\\d+)\\] in zone '(?P<zone>.*?)' killed by '(?P<killer>.*?)' \\[(?P<killer_id>\\d+)\\] using '(?P<weapon>.*?)' \\[Class (?P<weapon_class>.*?)\\] with damage type '(?P<damage_type>.*?)' from direction x: (?P<direction_x>[\\d\\.-]+), y: (?P<direction_y>[\\d\\.-]+), z: (?P<direction_z>[\\d\\.-]+) \\[Team_ActorTech\\]\\[Actor\\]",
        "player_death" : "<(?P<timestamp>.*?)> \\[Notice\\] <Actor Death> CActor::Kill: '(?P<victim>(?!Kopion_|PU_).*?)' \\[(?P<victim_id>\\d+)\\] in zone '(?P<zone>.*?)' killed by '(?P<killer>(?!Kopion_|PU_).*?)' \\[(?P<killer_id>\\d+)\\] using '(?P<weapon>.*?)' \\[Class (?P<weapon_class>.*?)\\] with damage type '(?P<damage_type>(?!(Crash|Suicide)).*?)' from direction x: (?P<direction_x>[\\d\\.-]+), y: (?P<direction_y>[\\d\\.-]+), z: (?P<direction_z>[\\d\\.-]+) \\[Team_ActorTech\\]\\[Actor\\]",
        "username_death" : "<(?P<timestamp>.*?)> \\[Notice\\] <Actor Death> CActor::Kill: '(?P<victim>(?!Kopion_|PU_).*?)' \\[(?P<victim_id>\\d+)\\] in zone '(?P<zone>.*?)' killed by '(?P<killer>(?!Kopion_|PU_).*?)' \\[(?P<killer_id>\\d+)\\] using '(?P<weapon>.*?)' \\[Class (?P<weapon_class>.*?)\\] with damage type '(?P<damage_type>(?!(Crash|Suicide)).*?)' from direction x: (?P<direction_x>[\\d\\.-]+), y: (?P<direction_y>[\\d\\.-]+), z: (?P<direction_z>[\\d\\.-]+) \\[Team_ActorTech\\]\\[Actor\\]",
        "commodity": "(?P<timestamp>\\d+-\\d+-\\d+ \\d+:\\d+:\\d+) - (?P<owner>\\w+) acquired (?P<commodity>\\w+) in zone (?P<zone>\\w+)",
        "leave_player": "<(?P<timestamp>.*?)> \\[Notice\\] <CEntityComponentInstancedInterior::OnEntityLeaveZone> \\[InstancedInterior\\] OnEntityLeaveZone - InstancedInterior \\[(?P<zone>.*?)\\] \\[(?P<zone_id>\\d+)\\] -> Entity \\[(?P<entity>.*?)\\] \\[(?P<entity_id>\\d+)\\] -- m_openDoors\\[(?P<open_doors>\\d+)\\], m_managerGEID\\[(?P<manager_geid>\\d+)\\], m_ownerGEID\\[(?P<player>.*?)\\]\\[(?P=entity_id)\\], m_isPersistent\\[(?P<persistent>\\d+)\\] \\[Team_(?P<team>.*?)\\]\\[Cargo\\]",
        "actor_stall": "<(?P<timestamp>.*?)> \\[Notice\\] <Actor stall> Actor stall detected, Player: (?P<player>.*?), Type: .*?, Length: .*?\\. \\[Team_(?P<team>.*?)\\]\\[Actor\\]",
        "enter_player": "<(?P<timestamp>.*?)> \\[Notice\\] <CEntityComponentInstancedInterior::OnEntityEnterZone> \\[InstancedInterior\\] OnEntityEnterZone - InstancedInterior \\[(?P<zone>.*?)\\] \\[(?P<zone_id>\\d+)\\] -> Entity \\[(?P<entity>.*?)\\] \\[(?P<entity_id>\\d+)\\] -- m_openDoors\\[(?P<open_doors>\\d+)\\], m_managerGEID\\[(?P<manager_geid>\\d+)\\], m_ownerGEID\\[(?P<player>.*?)\\]\\[(?P=entity_id)\\], m_isPersistent\\[(?P<persistent>\\d+)\\] \\[Team_(?P<team>.*?)\\]\\[Cargo\\]",
        "enter_ship": "<(?P<timestamp>.*?)> \\[Notice\\] <CEntityComponentInstancedInterior::OnEntityEnterZone> \\[InstancedInterior\\] OnEntityEnterZone - InstancedInterior \\[(?P<zone>.*?)\\] \\[(?P<zone_id>\\d+)\\] -> Entity \\[(?P<entity>(ORIG|CRUS|RSI|AEGS|VNCL|DRAK|ANVL|BANU|MISC|CNOU|XIAN|GAMA|TMBL|ESPR|KRIG|GRIN|XNAA)_.*?)\\] \\[(?P<entity_id>\\d+)\\] -- m_openDoors\\[(?P<open_doors>\\d+)\\], m_managerGEID\\[(?P<manager_geid>\\d+)\\], m_ownerGEID\\[(?P<player>.*?)\\]\\[(?P<player_id>.*?)\\], m_isPersistent\\[(?P<persistent>\\d+)\\] \\[Team_(?P<team>.*?)\\]\\[Cargo\\]",
        "leave_ship": "<(?P<timestamp>.*?)> \\[Notice\\] <CEntityComponentInstancedInterior::OnEntityLeaveZone> \\[InstancedInterior\\] OnEntityLeaveZone - InstancedInterior \\[(?P<zone>.*?)\\] \\[(?P<zone_id>\\d+)\\] -> Entity \\[(?P<entity>(ORIG|CRUS|RSI|AEGS|VNCL|DRAK|ANVL|BANU|MISC|CNOU|XIAN|GAMA|TMBL|ESPR|KRIG|GRIN|XNAA)_.*?)\\] \\[(?P<entity_id>\\d+)\\] -- m_openDoors\\[(?P<open_doors>\\d+)\\], m_managerGEID\\[(?P<manager_geid>\\d+)\\], m_ownerGEID\\[(?P<player>.*?)\\]\\[(?P<player_id>.*?)\\], m_isPersistent\\[(?P<persistent>\\d+)\\] \\[Team_(?P<team>.*?)\\]\\[Cargo\\]",
        "connected" : "<(?P<timestamp>[^>]+)> \\[CSessionManager::OnClientConnected\\] (?P<message>Connected!)",
        "quantum_jump" : "<(?P<timestamp>[^>]+)> -- Entity Trying To QT: (?P<player>.+)",
        "vehicle_destruction": "<(?P<timestamp>.*?)> \\[Notice\\] <Vehicle Destruction> CVehicle::OnAdvanceDestroyLevel: Vehicle '(?P<vehicle>.*?)' \\[(?P<vehicle_id>\\d+)\\] in zone '(?P<zone>.*?)' \\[pos x: (?P<pos_x>[\\d\\.-]+), y: (?P<pos_y>[\\d\\.-]+), z: (?P<pos_z>[\\d\\.-]+) vel x: (?P<vel_x>[\\d\\.-]+), y: (?P<vel_y>[\\d\\.-]+), z: (?P<vel_z>[\\d\\.-]+)] driven by '(?P<driver>.*?)' \\[(?P<driver_id>\\d+)\\] advanced from destroy level (?P<destroy_level_from>\\d+) to (?P<destroy_level_to>\\d+) caused by '(?P<cause>.*?)' \\[(?P<cause_id>\\d+)\\] with '(?P<damage_type>.*?)' \\[Team_(?P<team>.*?)\\]\\[Vehicle\\]"
    },
    "important_players": [],
    "messages": {
        "vehicle_destruction": "{vehicle}:{driver} was destroyed by {cause} with {damage_type} in {zone}",
        "actor_death": "******* {killer}->{victim}: {zone} - {weapon} - {damage_type}",
        "username_death": "+++++++ {killer}->{victim}: {zone} - {weapon} - {damage_type}",
        "actor_stall": "{player}: Stalled",
        "leave_player": "{player}: Left zone {zone}",
        "enter_player": "{player}: Entered zone {zone}",
        "enter_ship": "{player}: Ship {entity} entered zone {zone}",
        "leave_ship": "{player}: Ship {entity} left zone {zone}",
        "connected": "====================== Connected ======================",
        "quantum_jump": "{player}: Quantum jump",
        "mode_change": "Game Mode changed: {mode} {status} at {timestamp}"
    },
    "discord": {
        "username_death": "{username} :skull: **Player Death** :skull: {victim} was killed by {killer} using {weapon} in {zone} with {damage_type}"
    }
    "modes": {
        "Live": {
            "start_regex": "<(?P<timestamp>\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z)> \\[\\+\\] \\[CIG\\] \\{Join PU\\} \\[0\\] id\\[(?P<session_id>[\\w-]+)\\] status\\[(?P<status>\\d+)\\] port\\[(?P<port>\\d+)\\]",
            "end_regex": "<(?P<timestamp>\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z)> \\[Notice\\] <Channel Disconnected> cause=30016 reason=\"Remote Disconnect - Player requested disconnect\""
        },
        "Arena": {
            "start_regex": "<(?P<timestamp>\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z)> \\[\\+\\] \\[CIG\\] \\{Join Match\\} \\[0\\] id\\[(?P<match_id>[\\w-]+)\\] status\\[(?P<status>\\d+)\\] port\\[(?P<port>\\d+)\\]",
            "end_regex": "<(?P<timestamp>\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z)> \\[Notice\\] <Channel Disconnected>"
        }

    },
}    